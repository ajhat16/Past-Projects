--- bcimgview.c 2023-04-18 11:54:16.750482590 -0500
+++ bcimgview-new.c     2023-04-25 12:18:10.897719633 -0500
@@ -119,6 +119,8 @@ uint64_t read_u64_bigendian(FILE *fh) {
 }
 
 /* Printf format to log information about each displayed image */
+const char *safe_fmt = "Displaying image of width %ld and height %ld"
+    " from %s";
 const char *logging_fmt = "Displaying image of width %ld and height %ld"
     " from %s";
 
@@ -269,7 +271,23 @@ struct image_info *parse_bcraw(FILE *fh)
     height = read_u64_bigendian(fh);
     if (height == -1) return 0;
 
+    if (width < 1 || height < 1) {
+        format_problem = "size must be positive";
+        return 0;
+    }
+
+    if (abs(width) > 46340 && abs(height) > 46340) {
+        format_problem = "size too large";
+        return 0;
+    }
+
     num_bytes = 3 * width * height;
+
+    if (num_bytes < ((unsigned long long) 3 * width * height)) {
+        format_problem = "integer overflow present";
+        return 0;
+    }
+
     pixels = xmalloc(num_bytes +
                      TRAILER_ALIGNMENT + sizeof(struct image_info));
     info_footer = trailer_location(pixels, num_bytes);
@@ -1774,8 +1792,14 @@ void print_log_msg(struct image_info *in
     } else {
         strcpy(time_str, "recently");
     }
-    printf(logging_fmt, info->width, info->height, time_str,
+
+    // Prevents a format string attack from the user
+    if (strcmp(logging_fmt, safe_fmt) != 0) {
+        printf("%s", logging_fmt);
+    } else {
+        printf(safe_fmt, info->width, info->height, time_str,
            info->create_time);
+    }
     printf("\n");
 }